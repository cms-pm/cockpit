/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_BOOTLOADER_PB_H_INCLUDED
#define PB_BOOTLOADER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _ResultCode {
    ResultCode_SUCCESS = 0,
    ResultCode_ERROR_COMMUNICATION = 1,
    ResultCode_ERROR_FLASH_OPERATION = 2,
    ResultCode_ERROR_DATA_CORRUPTION = 3,
    ResultCode_ERROR_RESOURCE_EXHAUSTION = 4,
    ResultCode_ERROR_INVALID_REQUEST = 5
} ResultCode;

typedef enum _ErrorCode {
    ErrorCode_COMM_TIMEOUT = 0,
    ErrorCode_COMM_FRAMING_ERROR = 1,
    ErrorCode_COMM_CRC_MISMATCH = 2,
    ErrorCode_FLASH_ERASE_FAILED = 3,
    ErrorCode_FLASH_WRITE_FAILED = 4,
    ErrorCode_FLASH_VERIFY_FAILED = 5,
    ErrorCode_DATA_CRC_MISMATCH = 6,
    ErrorCode_INVALID_SEQUENCE = 7,
    ErrorCode_RESOURCE_EXHAUSTION = 8
} ErrorCode;

typedef enum _RecoveryAction {
    RecoveryAction_RETRY_LAST_OPERATION = 0,
    RecoveryAction_ABORT_AND_RESET = 1,
    RecoveryAction_CLEAR_ERROR_STATE = 2
} RecoveryAction;

/* Struct definitions */
typedef struct _HandshakeRequest {
    char capabilities[64];
    uint32_t max_packet_size;
} HandshakeRequest;

typedef struct _HandshakeResponse {
    char bootloader_version[16];
    char supported_capabilities[128];
    uint32_t flash_page_size;
    uint32_t target_flash_address;
} HandshakeResponse;

typedef PB_BYTES_ARRAY_T(1024) DataPacket_data_t;
typedef struct _DataPacket {
    uint32_t offset;
    DataPacket_data_t data;
    uint32_t data_crc32;
} DataPacket;

typedef struct _FlashProgramRequest {
    uint32_t total_data_length;
    bool verify_after_program;
} FlashProgramRequest;

typedef PB_BYTES_ARRAY_T(32) FlashProgramResponse_verification_hash_t;
typedef struct _FlashProgramResponse {
    uint32_t bytes_programmed;
    uint32_t actual_data_length;
    FlashProgramResponse_verification_hash_t verification_hash;
} FlashProgramResponse;

typedef struct _ErrorRecoveryRequest {
    RecoveryAction action;
} ErrorRecoveryRequest;

typedef struct _BootloaderRequest {
    uint32_t sequence_id;
    pb_size_t which_request;
    union {
        HandshakeRequest handshake;
        DataPacket data;
        FlashProgramRequest flash_program;
        ErrorRecoveryRequest recovery;
    } request;
} BootloaderRequest;

typedef struct _ErrorReport {
    ErrorCode error_code;
    char diagnostic_message[128];
    uint32_t failed_sequence_id;
} ErrorReport;

typedef struct _Acknowledgment {
    bool success;
    char message[64];
} Acknowledgment;

typedef struct _BootloaderResponse {
    uint32_t sequence_id;
    ResultCode result;
    pb_size_t which_response;
    union {
        HandshakeResponse handshake;
        Acknowledgment ack;
        FlashProgramResponse flash_result;
        ErrorReport error;
    } response;
} BootloaderResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _ResultCode_MIN ResultCode_SUCCESS
#define _ResultCode_MAX ResultCode_ERROR_INVALID_REQUEST
#define _ResultCode_ARRAYSIZE ((ResultCode)(ResultCode_ERROR_INVALID_REQUEST+1))

#define _ErrorCode_MIN ErrorCode_COMM_TIMEOUT
#define _ErrorCode_MAX ErrorCode_RESOURCE_EXHAUSTION
#define _ErrorCode_ARRAYSIZE ((ErrorCode)(ErrorCode_RESOURCE_EXHAUSTION+1))

#define _RecoveryAction_MIN RecoveryAction_RETRY_LAST_OPERATION
#define _RecoveryAction_MAX RecoveryAction_CLEAR_ERROR_STATE
#define _RecoveryAction_ARRAYSIZE ((RecoveryAction)(RecoveryAction_CLEAR_ERROR_STATE+1))


#define BootloaderResponse_result_ENUMTYPE ResultCode






#define ErrorRecoveryRequest_action_ENUMTYPE RecoveryAction

#define ErrorReport_error_code_ENUMTYPE ErrorCode



/* Initializer values for message structs */
#define BootloaderRequest_init_default           {0, 0, {HandshakeRequest_init_default}}
#define BootloaderResponse_init_default          {0, _ResultCode_MIN, 0, {HandshakeResponse_init_default}}
#define HandshakeRequest_init_default            {"", 0}
#define HandshakeResponse_init_default           {"", "", 0, 0}
#define DataPacket_init_default                  {0, {0, {0}}, 0}
#define FlashProgramRequest_init_default         {0, 0}
#define FlashProgramResponse_init_default        {0, 0, {0, {0}}}
#define ErrorRecoveryRequest_init_default        {_RecoveryAction_MIN}
#define ErrorReport_init_default                 {_ErrorCode_MIN, "", 0}
#define Acknowledgment_init_default              {0, ""}
#define BootloaderRequest_init_zero              {0, 0, {HandshakeRequest_init_zero}}
#define BootloaderResponse_init_zero             {0, _ResultCode_MIN, 0, {HandshakeResponse_init_zero}}
#define HandshakeRequest_init_zero               {"", 0}
#define HandshakeResponse_init_zero              {"", "", 0, 0}
#define DataPacket_init_zero                     {0, {0, {0}}, 0}
#define FlashProgramRequest_init_zero            {0, 0}
#define FlashProgramResponse_init_zero           {0, 0, {0, {0}}}
#define ErrorRecoveryRequest_init_zero           {_RecoveryAction_MIN}
#define ErrorReport_init_zero                    {_ErrorCode_MIN, "", 0}
#define Acknowledgment_init_zero                 {0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define HandshakeRequest_capabilities_tag        1
#define HandshakeRequest_max_packet_size_tag     2
#define HandshakeResponse_bootloader_version_tag 1
#define HandshakeResponse_supported_capabilities_tag 2
#define HandshakeResponse_flash_page_size_tag    3
#define HandshakeResponse_target_flash_address_tag 4
#define DataPacket_offset_tag                    1
#define DataPacket_data_tag                      2
#define DataPacket_data_crc32_tag                3
#define FlashProgramRequest_total_data_length_tag 1
#define FlashProgramRequest_verify_after_program_tag 2
#define FlashProgramResponse_bytes_programmed_tag 1
#define FlashProgramResponse_actual_data_length_tag 2
#define FlashProgramResponse_verification_hash_tag 3
#define ErrorRecoveryRequest_action_tag          1
#define BootloaderRequest_sequence_id_tag        2
#define BootloaderRequest_handshake_tag          3
#define BootloaderRequest_data_tag               4
#define BootloaderRequest_flash_program_tag      5
#define BootloaderRequest_recovery_tag           6
#define ErrorReport_error_code_tag               1
#define ErrorReport_diagnostic_message_tag       2
#define ErrorReport_failed_sequence_id_tag       3
#define Acknowledgment_success_tag               1
#define Acknowledgment_message_tag               2
#define BootloaderResponse_sequence_id_tag       2
#define BootloaderResponse_result_tag            3
#define BootloaderResponse_handshake_tag         4
#define BootloaderResponse_ack_tag               5
#define BootloaderResponse_flash_result_tag      6
#define BootloaderResponse_error_tag             7

/* Struct field encoding specification for nanopb */
#define BootloaderRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_id,       2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,handshake,request.handshake),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,data,request.data),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,flash_program,request.flash_program),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,recovery,request.recovery),   6)
#define BootloaderRequest_CALLBACK NULL
#define BootloaderRequest_DEFAULT NULL
#define BootloaderRequest_request_handshake_MSGTYPE HandshakeRequest
#define BootloaderRequest_request_data_MSGTYPE DataPacket
#define BootloaderRequest_request_flash_program_MSGTYPE FlashProgramRequest
#define BootloaderRequest_request_recovery_MSGTYPE ErrorRecoveryRequest

#define BootloaderResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_id,       2) \
X(a, STATIC,   SINGULAR, UENUM,    result,            3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,handshake,response.handshake),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,ack,response.ack),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,flash_result,response.flash_result),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,error,response.error),   7)
#define BootloaderResponse_CALLBACK NULL
#define BootloaderResponse_DEFAULT NULL
#define BootloaderResponse_response_handshake_MSGTYPE HandshakeResponse
#define BootloaderResponse_response_ack_MSGTYPE Acknowledgment
#define BootloaderResponse_response_flash_result_MSGTYPE FlashProgramResponse
#define BootloaderResponse_response_error_MSGTYPE ErrorReport

#define HandshakeRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   capabilities,      1) \
X(a, STATIC,   SINGULAR, UINT32,   max_packet_size,   2)
#define HandshakeRequest_CALLBACK NULL
#define HandshakeRequest_DEFAULT NULL

#define HandshakeResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   bootloader_version,   1) \
X(a, STATIC,   SINGULAR, STRING,   supported_capabilities,   2) \
X(a, STATIC,   SINGULAR, UINT32,   flash_page_size,   3) \
X(a, STATIC,   SINGULAR, UINT32,   target_flash_address,   4)
#define HandshakeResponse_CALLBACK NULL
#define HandshakeResponse_DEFAULT NULL

#define DataPacket_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   offset,            1) \
X(a, STATIC,   SINGULAR, BYTES,    data,              2) \
X(a, STATIC,   SINGULAR, UINT32,   data_crc32,        3)
#define DataPacket_CALLBACK NULL
#define DataPacket_DEFAULT NULL

#define FlashProgramRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   total_data_length,   1) \
X(a, STATIC,   SINGULAR, BOOL,     verify_after_program,   2)
#define FlashProgramRequest_CALLBACK NULL
#define FlashProgramRequest_DEFAULT NULL

#define FlashProgramResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   bytes_programmed,   1) \
X(a, STATIC,   SINGULAR, UINT32,   actual_data_length,   2) \
X(a, STATIC,   SINGULAR, BYTES,    verification_hash,   3)
#define FlashProgramResponse_CALLBACK NULL
#define FlashProgramResponse_DEFAULT NULL

#define ErrorRecoveryRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    action,            1)
#define ErrorRecoveryRequest_CALLBACK NULL
#define ErrorRecoveryRequest_DEFAULT NULL

#define ErrorReport_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    error_code,        1) \
X(a, STATIC,   SINGULAR, STRING,   diagnostic_message,   2) \
X(a, STATIC,   SINGULAR, UINT32,   failed_sequence_id,   3)
#define ErrorReport_CALLBACK NULL
#define ErrorReport_DEFAULT NULL

#define Acknowledgment_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     success,           1) \
X(a, STATIC,   SINGULAR, STRING,   message,           2)
#define Acknowledgment_CALLBACK NULL
#define Acknowledgment_DEFAULT NULL

extern const pb_msgdesc_t BootloaderRequest_msg;
extern const pb_msgdesc_t BootloaderResponse_msg;
extern const pb_msgdesc_t HandshakeRequest_msg;
extern const pb_msgdesc_t HandshakeResponse_msg;
extern const pb_msgdesc_t DataPacket_msg;
extern const pb_msgdesc_t FlashProgramRequest_msg;
extern const pb_msgdesc_t FlashProgramResponse_msg;
extern const pb_msgdesc_t ErrorRecoveryRequest_msg;
extern const pb_msgdesc_t ErrorReport_msg;
extern const pb_msgdesc_t Acknowledgment_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define BootloaderRequest_fields &BootloaderRequest_msg
#define BootloaderResponse_fields &BootloaderResponse_msg
#define HandshakeRequest_fields &HandshakeRequest_msg
#define HandshakeResponse_fields &HandshakeResponse_msg
#define DataPacket_fields &DataPacket_msg
#define FlashProgramRequest_fields &FlashProgramRequest_msg
#define FlashProgramResponse_fields &FlashProgramResponse_msg
#define ErrorRecoveryRequest_fields &ErrorRecoveryRequest_msg
#define ErrorReport_fields &ErrorReport_msg
#define Acknowledgment_fields &Acknowledgment_msg

/* Maximum encoded size of messages (where known) */
#define Acknowledgment_size                      67
#define BOOTLOADER_PB_H_MAX_SIZE                 BootloaderRequest_size
#define BootloaderRequest_size                   1048
#define BootloaderResponse_size                  170
#define DataPacket_size                          1039
#define ErrorRecoveryRequest_size                2
#define ErrorReport_size                         138
#define FlashProgramRequest_size                 8
#define FlashProgramResponse_size                46
#define HandshakeRequest_size                    71
#define HandshakeResponse_size                   159

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
