# ComponentVM Hardware Test Catalog
# Defines all available tests with metadata for workspace-isolated execution

tests:
  pc6_led_focused:
    source: test_pc6_led_focused.c
    dependencies: []  # Self-contained test
    description: "Focused PC6 LED test - confirmed working on WeAct STM32G431CB"
    timeout: 15s
    expected_patterns:
      - "PC6 LED test complete"
      - "workspace isolation working"
    hardware_requirements:
      - led_pc6
    category: hardware_validation
    stability: confirmed_working
    notes: "This test successfully validates our workspace isolation system"
    validation:
      execution_strategy: dual_pass
      required: false
      authority:
        overall: supplemental
        semihosting: optional
        memory: required
        timeout_strategy: fail_graceful
      timeout: 30s
      
      # Pass 1: Semihosting validation
      semihosting_checks:
        - contains: "PC6 LED test complete"
        - contains: "workspace isolation working"
        - not_contains: "ERROR"
      semihosting_timeout: 20s
      
      # Pass 2: Memory validation
      common_checks:
        - gpio_pc6_output
      memory_checks:
        gpioc_pc6_output_mode:
          address: 0x48000800        # GPIOC base
          offset: 0x00               # MODER register
          mask: 0x3000               # PC6 mode bits [13:12]
          expected: 0x1000           # Output mode (01)
          description: "PC6 configured as output mode"
      peripheral_checks:
        pc6:
          mode: output
          state: high
      
      # Rich diagnostics
      diagnostics:
        verbosity: standard
        memory_dump_range: 0x20
        include_peripheral_summary: true
        include_both_passes: true
    
  # Additional tests to be migrated from legacy system
  led_basic:
    source: test_led_basic.c  # To be migrated
    dependencies: []
    description: "Basic LED toggle validation"
    timeout: 10s
    expected_patterns:
      - "LED test complete"
    hardware_requirements:
      - led_pc6
    category: hardware_validation
    stability: to_be_migrated
    
  uart_basic:
    source: test_uart_basic.c
    dependencies: []  # Self-contained test, no semihosting
    description: "UART communication validation - no semihosting, output via UART only"
    timeout: 45s
    expected_patterns:
      - "UART test complete"
      - "All UART functions validated"
    hardware_requirements:
      - usart2_pa2_pa3
      - led_pc6
    category: communication
    stability: development
    semihosting: false  # Disable semihosting for this test
    notes: "Test output via UART (PA2/PA3) - monitor with serial terminal at 115200 baud"
    
  usart1_comprehensive:
    source: test_usart1_comprehensive.c
    dependencies: []  # Self-contained test with semihosting
    description: "Comprehensive USART1 test with Serial output and register validation"
    timeout: 60s
    expected_patterns:
      - "USART1 Test Complete"
      - "All USART1 functions validated successfully"
      - "Register states analyzed and documented"
    hardware_requirements:
      - usart2_pa2_pa3
      - led_pc6
    category: communication
    stability: development
    semihosting: true  # Enable semihosting for debug output
    notes: "Comprehensive USART2 validation with register analysis and optional interactive testing"
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: required
        timeout_strategy: fail_graceful
      timeout: 45s
      
      # Pass 1: Semihosting validation
      semihosting_checks:
        - contains: "USART1 Comprehensive Test Starting"
        - contains: "USART1 initialized successfully"
        - contains: "USART1 comprehensive test execution complete"
        - contains: "CR1.UE: PASS"
        - contains: "CR1.TE: PASS"
        - contains: "ISR.TXE: PASS"
        - not_contains: "FAIL"
        - not_contains: "ERROR"
        - sequence:
          - "Test 1: USART1 initialization"
          - "Test 2: Initial register validation"
          - "Test 3: Transmission pattern testing"
          - "Test 4: Post-transmission register validation"
          - "Test 5: Interactive reception testing"
          - "Test 6: Final register state validation"
      semihosting_timeout: 30s
      
      # Pass 2: Memory validation - USART2 register states
      memory_checks:
        usart2_enabled:
          address: 0x40004400        # USART2 base
          offset: 0x00               # CR1 register
          mask: 0x01                 # UE bit
          expected: 0x01             # USART enabled
          description: "USART2 enabled (CR1.UE)"
        usart2_transmitter_enabled:
          address: 0x40004400        # USART2 base
          offset: 0x00               # CR1 register
          mask: 0x08                 # TE bit
          expected: 0x08             # Transmitter enabled
          description: "USART2 transmitter enabled (CR1.TE)"
        usart2_receiver_enabled:
          address: 0x40004400        # USART2 base
          offset: 0x00               # CR1 register
          mask: 0x04                 # RE bit
          expected: 0x04             # Receiver enabled
          description: "USART2 receiver enabled (CR1.RE)"
        usart2_tx_empty:
          address: 0x40004400        # USART2 base
          offset: 0x1C               # ISR register
          mask: 0x80                 # TXE bit
          expected: 0x80             # TX empty
          description: "USART2 TX empty (ISR.TXE)"
        usart2_clock_enabled:
          address: 0x40021058        # RCC APB1ENR1
          offset: 0x00               # APB1ENR1 register
          mask: 0x20000              # USART2EN bit (bit 17)
          expected: 0x20000          # USART2 clock enabled
          description: "USART2 clock enabled (RCC.APB1ENR1.USART2EN)"
        usart2_baud_rate_configured:
          address: 0x40004400        # USART2 base
          offset: 0x0C               # BRR register
          mask: 0xFFFF               # Full BRR value
          expected: 0x015B           # 115200 baud at 40MHz effective (347 decimal, with DIV4 prescaler)
          description: "USART2 baud rate configured"
          
      # Cross-platform peripheral checks
      peripheral_checks:
        uart2:
          enabled: true
          baud_rate: 115200
          tx_ready: true
          
      # Rich diagnostics
      diagnostics:
        verbosity: verbose
        memory_dump_range: 0x40
        include_peripheral_summary: true
        include_both_passes: true

  # Bootloader foundation tests (Phase 4.5.2A validation)
  bootloader_foundation:
    source: bootloader/test_bootloader_foundation.c
    dependencies: 
      - common/bootloader_test_framework.h
    description: "Foundation validation for Phase 4.5.2A bootloader implementation"
    timeout: 15s
    expected_patterns:
      - "Bootloader Foundation Test"
      - "Test 1: Basic execution - PASS"
      - "Test 2: Memory operations - PASS" 
      - "Test 3: Stack operations - PASS"
      - "BOOTLOADER FOUNDATION TEST: PASS"
    hardware_requirements: []
    category: bootloader_foundation
    priority: high
    stability: phase_4_5_2a
    notes: "Essential validation for bootloader Phase 4.5.2A foundation"
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: optional
        timeout_strategy: fail_graceful
      timeout: 30s
      
      semihosting_checks:
        - contains: "=== Bootloader Foundation Test ==="
        - contains: "Test 1: Basic execution - PASS"
        - contains: "Test 2: Memory operations - PASS"
        - contains: "Test 3: Stack operations - PASS"
        - contains: "=== BOOTLOADER FOUNDATION TEST: PASS ==="
        - not_contains: "FAIL"
      semihosting_timeout: 20s
      
      diagnostics:
        verbosity: standard
        memory_dump_range: 0x20
        include_peripheral_summary: false
        include_both_passes: true

  # Bootloader blocking foundation tests (Phase 4.5.1 validation)
  bootloader_blocking_foundation:
    source: test_bootloader_blocking_foundation.c
    dependencies: []
    description: "Blocking-first bootloader foundation validation - transport, state machine, timeout, resources"
    timeout: 30s
    expected_patterns:
      - "=== Bootloader Blocking Foundation Test Suite ==="
      - "✓ Blocking UART Init: PASS"
      - "✓ Timeout Overflow Protection: PASS"
      - "✓ State Machine Deterministic: PASS"
      - "✓ Resource Management: PASS"
      - "✓ Error Handling Recovery: PASS"
      - "✓ Bootloader Integration: PASS"
      - "=== Test Results: 6/6 passed ==="
      - "BOOTLOADER BLOCKING FOUNDATION: ALL TESTS PASSED"
    hardware_requirements:
      - usart1_pa9_pa10
      - led_pc6
    category: bootloader_foundation
    priority: high
    stability: phase_4_5_1
    notes: "Blocking-first bootloader foundation: transport, state machine, timeout management, resource cleanup"
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: optional
        timeout_strategy: fail_graceful
      timeout: 45s
      
      semihosting_checks:
        - contains: "=== Bootloader Blocking Foundation Test Suite ==="
        - contains: "Testing blocking UART initialization..."
        - contains: "PASS: Blocking UART initialization"
        - contains: "Testing timeout overflow protection..."
        - contains: "PASS: Timeout overflow protection"
        - contains: "Testing deterministic state machine..."
        - contains: "PASS: State machine deterministic transitions"
        - contains: "Testing resource management..."
        - contains: "PASS: Resource management"
        - contains: "Testing error handling and recovery..."
        - contains: "PASS: Error handling and recovery"
        - contains: "Testing bootloader integration..."
        - contains: "PASS: Bootloader integration"
        - contains: "=== Test Results: 6/6 passed ==="
        - contains: "BOOTLOADER BLOCKING FOUNDATION: ALL TESTS PASSED"
        - not_contains: "FAIL"
        - not_contains: "ERROR"
      semihosting_timeout: 35s
      
      diagnostics:
        verbosity: standard
        memory_dump_range: 0x20
        include_peripheral_summary: true
        include_both_passes: true

  # Protobuf Integration Test (Phase 4.5.2A validation)
  protobuf_integration:
    source: test_protobuf_integration.c
    dependencies: []
    description: "Phase 4.5.2A protobuf integration validation - nanopb encode/decode testing"
    timeout: 20s
    expected_patterns:
      - "=== Protobuf Integration Test Suite ==="
      - "✓ Protobuf Structure Compilation: PASS"
      - "✓ Protobuf Encoding: PASS"
      - "✓ Protobuf Decoding: PASS" 
      - "✓ Protobuf Memory Constraints: PASS"
      - "=== Test Results: 4/4 passed ==="
      - "PROTOBUF INTEGRATION: ALL TESTS PASSED"
    hardware_requirements:
      - basic_mcu
    category: protocol_integration
    priority: high
    stability: phase_4_5_2a
    notes: "Tests protobuf compilation, encoding/decoding, memory constraints with nanopb"
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: optional
        timeout_strategy: fail_graceful
      timeout: 30s
      
      semihosting_checks:
        - contains: "=== Protobuf Integration Test Suite ==="
        - contains: "Testing protobuf structure compilation..."
        - contains: "PASS: Protobuf structure compilation"
        - contains: "Testing protobuf encoding..."
        - contains: "PASS: Protobuf encoding"
        - contains: "Testing protobuf decoding..."
        - contains: "PASS: Protobuf decoding"
        - contains: "Testing protobuf memory constraints..."
        - contains: "PASS: Protobuf memory constraints"
        - contains: "=== Test Results: 4/4 passed ==="
        - contains: "PROTOBUF INTEGRATION: ALL TESTS PASSED"
        - not_contains: "FAIL"
        - not_contains: "ERROR"
      semihosting_timeout: 25s
      
      diagnostics:
        verbosity: standard
        memory_dump_range: 0x20
        include_peripheral_summary: false
        include_both_passes: true

  # Binary Framing Integration Test (Phase 4.5.2B validation)
  binary_framing:
    source: test_binary_framing.c
    dependencies: []
    description: "Phase 4.5.2B binary framing validation - CRC16, parsing, encoding, flash staging"
    timeout: 30s
    expected_patterns:
      - "=== Binary Framing Integration Test Suite ==="
      - "✓ CRC16-CCITT Implementation: PASS"
      - "✓ Frame Encoding: PASS"
      - "✓ Frame Parsing: PASS" 
      - "✓ Flash Staging with 64-bit Alignment: PASS"
      - "✓ Error Injection: PASS"
      - "=== Test Results: 5/5 passed ==="
      - "BINARY FRAMING INTEGRATION: ALL TESTS PASSED"
    hardware_requirements:
      - basic_mcu
      - flash_memory
    category: protocol_integration
    priority: high
    stability: phase_4_5_2b
    notes: "Tests CRC16-CCITT, frame encoding/parsing, 64-bit flash alignment, error detection"
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: optional
        timeout_strategy: fail_graceful
      timeout: 45s
      
      semihosting_checks:
        - contains: "=== Binary Framing Integration Test Suite ==="
        - contains: "Testing CRC16-CCITT implementation..."
        - contains: "PASS: CRC16-CCITT implementation"
        - contains: "Testing frame encoding..."
        - contains: "PASS: Frame encoding"
        - contains: "Testing frame parsing..."
        - contains: "PASS: Frame parsing"
        - contains: "Testing flash staging with 64-bit alignment..."
        - contains: "PASS: Flash staging with 64-bit alignment"
        - contains: "Testing error injection - corrupted frame..."
        - contains: "PASS: Error injection"
        - contains: "=== Test Results: 5/5 passed ==="
        - contains: "BINARY FRAMING INTEGRATION: ALL TESTS PASSED"
        - not_contains: "FAIL"
        - not_contains: "ERROR"
      semihosting_timeout: 35s
      
      diagnostics:
        verbosity: standard
        memory_dump_range: 0x20
        include_peripheral_summary: false
        include_both_passes: true

  # Flash Programming Protocol Test (Phase 4.5.2C validation)
  flash_programming_protocol:
    source: test_flash_programming_protocol.c
    dependencies: []
    description: "Phase 4.5.2C complete bootloader protocol validation - handshake through flash programming"
    timeout: 45s
    expected_patterns:
      - "=== Flash Programming Protocol Test Suite ==="
      - "✓ Handshake Protocol: PASS"
      - "✓ Flash Program Prepare: PASS"
      - "✓ Data Packet Processing: PASS" 
      - "✓ Flash Program Verify: PASS"
      - "✓ Complete Protocol Sequence: PASS"
      - "=== Test Results: 5/5 passed ==="
      - "FLASH PROGRAMMING PROTOCOL: ALL TESTS PASSED"
    hardware_requirements:
      - basic_mcu
      - flash_memory
    category: protocol_integration
    priority: high
    stability: phase_4_5_2c
    notes: "Complete bootloader protocol: handshake, prepare, data transfer, verification with ≤1024 byte transfers"
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: optional
        timeout_strategy: fail_graceful
      timeout: 60s
      
      semihosting_checks:
        - contains: "=== Flash Programming Protocol Test Suite ==="
        - contains: "Testing handshake protocol..."
        - contains: "PASS: Handshake protocol"
        - contains: "Testing flash program prepare phase..."
        - contains: "PASS: Flash program prepare phase"
        - contains: "Testing data packet processing..."
        - contains: "PASS: Data packet processing"
        - contains: "Testing flash program verify phase..."
        - contains: "PASS: Flash program verify phase"
        - contains: "Testing complete protocol sequence..."
        - contains: "PASS: Complete protocol sequence"
        - contains: "=== Test Results: 5/5 passed ==="
        - contains: "FLASH PROGRAMMING PROTOCOL: ALL TESTS PASSED"
        - not_contains: "FAIL"
        - not_contains: "ERROR"
      semihosting_timeout: 45s
      
      diagnostics:
        verbosity: standard
        memory_dump_range: 0x20
        include_peripheral_summary: false
        include_both_passes: true

  # Flash Programming Protocol with Oracle Testing (Phase 4.5.2D validation)
  flash_programming_protocol_oracle:
    source: test_flash_programming_protocol_oracle.c
    dependencies: []
    description: "Phase 4.5.2C standard protocol test with Oracle reliability testing integration"
    timeout: 60s
    expected_patterns:
      - "=== Flash Programming Protocol Test with Oracle Integration ==="
      - "Step 1: Handshake"
      - "Handshake PASSED"
      - "Step 2: Prepare" 
      - "Prepare PASSED"
      - "Step 3: Data Transfer"
      - "Data Transfer PASSED"
      - "Step 4: Verify"
      - "Verify PASSED"
      - "=== STANDARD PROTOCOL TEST: PASSED ==="
      - "Oracle reliability tests will run automatically via workspace integration"
    hardware_requirements:
      - basic_mcu
      - flash_memory
      - usart1_pa9_pa10
    category: protocol_integration
    priority: high
    stability: phase_4_5_2d
    notes: "Standard protocol validation + Oracle error injection and recovery testing"
    oracle_scenarios:
      - normal
      - timeout_session
      - crc_frame_corruption
    oracle_sequences:
      - timeout_recovery_chain
      - crc_recovery_chain
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: optional
        timeout_strategy: fail_graceful
      timeout: 75s
      
      semihosting_checks:
        - contains: "=== Flash Programming Protocol Test with Oracle Integration ==="
        - contains: "Step 1: Handshake"
        - contains: "Handshake PASSED"
        - contains: "Step 2: Prepare"
        - contains: "Prepare PASSED" 
        - contains: "Step 3: Data Transfer"
        - contains: "Data Transfer PASSED"
        - contains: "Step 4: Verify"
        - contains: "Verify PASSED"
        - contains: "=== STANDARD PROTOCOL TEST: PASSED ==="
        - contains: "Oracle reliability tests will run automatically via workspace integration"
        - not_contains: "FAIL"
        - not_contains: "ERROR"
      semihosting_timeout: 50s
      
      diagnostics:
        verbosity: standard
        memory_dump_range: 0x20
        include_peripheral_summary: false
        include_both_passes: true

  # Bootloader Golden Triangle Integration Test (Phase 4.5.2E validation)
  bootloader_golden_triangle:
    source: test_bootloader_golden_triangle.c
    dependencies: []
    description: "Phase 4.5.2E complete golden triangle validation - embedded protocol + Oracle testing + integration"
    timeout: 120s
    expected_patterns:
      - "=== ComponentVM Bootloader Golden Triangle Integration Test ==="
      - "Golden Triangle Components:"
      - "1. Embedded Protocol: Hardware bootloader with complete protocol stack"
      - "2. Oracle Testing: Error injection, scenario composition, recovery validation"
      - "3. Integration: Real hardware + real protocol + real error conditions"
      - "=== EMBEDDED PROTOCOL VALIDATION ==="
      - "Bootloader initialization: PASS"
      - "Protocol readiness: PASS"
      - "Standard protocol sequence: PASS"
      - "Error recovery capability: PASS"
      - "Hardware resource management: PASS"
      - "=== EMBEDDED PROTOCOL VALIDATION: COMPLETE ==="
      - "Golden Triangle Integration: READY FOR ORACLE TESTING"
      - "=== BOOTLOADER PROTOCOL LISTENING MODE ==="
      - "Bootloader entering 30-second listening window for Oracle testing..."
    hardware_requirements:
      - basic_mcu
      - flash_memory
      - usart1_pa9_pa10
      - led_pc6
    category: golden_triangle_integration
    priority: critical
    stability: phase_4_5_2e
    notes: "Complete end-to-end bootloader ecosystem validation with comprehensive Oracle integration"
    oracle_scenarios:
      - normal
      - timeout_session
      - timeout_handshake
      - crc_frame_corruption
    oracle_sequences:
      - timeout_recovery_chain
      - crc_recovery_chain
      - comprehensive_stress_test
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: optional
        timeout_strategy: fail_graceful
      timeout: 150s
      
      semihosting_checks:
        - contains: "=== ComponentVM Bootloader Golden Triangle Integration Test ==="
        - contains: "Golden Triangle Components:"
        - contains: "1. Embedded Protocol: Hardware bootloader with complete protocol stack"
        - contains: "2. Oracle Testing: Error injection, scenario composition, recovery validation"
        - contains: "3. Integration: Real hardware + real protocol + real error conditions"
        - contains: "=== EMBEDDED PROTOCOL VALIDATION ==="
        - contains: "Step 1: Bootloader Initialization"
        - contains: "Bootloader initialization: PASS"
        - contains: "Step 2: Protocol Readiness Validation" 
        - contains: "Protocol readiness: PASS"
        - contains: "Step 3: Standard Protocol Sequence"
        - contains: "Standard protocol sequence: PASS"
        - contains: "Step 4: Error Recovery Capability"
        - contains: "Error recovery capability: PASS"
        - contains: "Step 5: Hardware Resource Management"
        - contains: "Hardware resource management: PASS"
        - contains: "=== EMBEDDED PROTOCOL VALIDATION: COMPLETE ==="
        - contains: "=== ORACLE INTEGRATION TRIGGER ==="
        - contains: "Embedded protocol validation successful"
        - contains: "Hardware bootloader ready for Oracle testing"
        - contains: "UART interface: USART1 PA9/PA10 at 115200 baud"
        - contains: "Protocol: Binary framing with protobuf messages"
        - contains: "Target: Flash page 63 (0x0801F800)"
        - contains: "Oracle scenarios will run automatically via workspace integration:"
        - contains: "Golden Triangle Integration: READY FOR ORACLE TESTING"
        - contains: "=== BOOTLOADER PROTOCOL LISTENING MODE ==="
        - contains: "Bootloader entering 30-second listening window for Oracle testing..."
        - not_contains: "FAIL"
        - not_contains: "ERROR"
      semihosting_timeout: 90s
      
      diagnostics:
        verbosity: verbose
        memory_dump_range: 0x40
        include_peripheral_summary: true
        include_both_passes: true

  # ComponentVM Comprehensive Test Suite (Phase 4.5.3B)
  vm_arithmetic_comprehensive:
    source: test_vm_arithmetic_comprehensive.c
    dependencies: []
    description: "Comprehensive ComponentVM arithmetic operations validation"
    timeout: 30s
    expected_patterns:
      - "ComponentVM Arithmetic Comprehensive Test"
      - "Basic arithmetic operations: PASS"
      - "Negative arithmetic operations: PASS"
      - "Zero arithmetic edge cases: PASS"
      - "Complex arithmetic expressions: PASS"
      - "Arithmetic with loop iterations: PASS"
      - "Large number arithmetic: PASS"
      - "VM Arithmetic Comprehensive Test: PASS"
    hardware_requirements: []
    category: vm_operations
    priority: high
    stability: phase_4_5_3b
    notes: "Validates all arithmetic operations: ADD, SUB, MUL, DIV, MOD with unified timing"
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: optional
        timeout_strategy: fail_graceful
      timeout: 45s
      
      semihosting_checks:
        - contains: "ComponentVM Arithmetic Comprehensive Test"
        - contains: "Basic arithmetic operations: PASS"
        - contains: "Negative arithmetic operations: PASS"
        - contains: "Zero arithmetic edge cases: PASS"
        - contains: "Complex arithmetic expressions: PASS"
        - contains: "Arithmetic with loop iterations: PASS"
        - contains: "Large number arithmetic: PASS"
        - contains: "VM Arithmetic Comprehensive Test: PASS"
        - not_contains: "FAIL"
      semihosting_timeout: 30s
      
      diagnostics:
        verbosity: standard
        memory_dump_range: 0x20
        include_peripheral_summary: false
        include_both_passes: true

  # Minimal Memory Validation Test (Dual-Pass Validation Proof)
  memory_validation_minimal:
    source: test_memory_validation_minimal.c
    dependencies: []
    description: "Minimal dual-pass memory validation test using GPIOC MODER"
    timeout: 20s
    expected_patterns:
      - "Minimal Memory Validation Test (Dual-Pass)"
      - "PC6 configured as output"
      - "PC6 configuration: OUTPUT MODE - PASS"
      - "PC6 mask validation: PASS"
      - "Minimal Memory Validation Test: COMPLETE"
    hardware_requirements:
      - led_pc6
    category: memory_validation
    priority: high
    stability: development
    notes: "Proves dual-pass memory validation works - firmware validation + external validation"
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: required
        timeout_strategy: fail_graceful
      timeout: 30s
      
      # Pass 1: Semihosting validation (firmware validation)
      semihosting_checks:
        - contains: "Minimal Memory Validation Test (Dual-Pass)"
        - contains: "PC6 configured as output"
        - contains: "PC6 configuration: OUTPUT MODE - PASS"
        - contains: "PC6 mask validation: PASS"
        - contains: "Minimal Memory Validation Test: COMPLETE"
        - not_contains: "FAIL"
        - sequence:
          - "Step 1: Configure PC6 as output"
          - "Step 2: Firmware validation (Pass 1)"
          - "Step 3: LED functionality test"
          - "Step 4: Ready for external validation (Pass 2)"
      semihosting_timeout: 25s
      
      # Pass 2: Memory validation (external validation via pyOCD)
      memory_checks:
        gpioc_pc6_output_mode:
          address: 0x48000800        # GPIOC MODER register
          mask: 0x3000               # PC6 mode bits [13:12]
          expected: 0x1000           # Output mode (01)
          description: "PC6 configured as output mode (GPIOC MODER)"
        gpioc_clock_enabled:
          address: 0x4002104C        # RCC AHB2ENR register
          mask: 0x04                 # GPIOC clock enable bit
          expected: 0x04             # GPIOC clock enabled
          description: "GPIOC clock enabled (RCC AHB2ENR)"
      
      # Rich diagnostics for debugging
      diagnostics:
        verbosity: verbose
        memory_dump_range: 0x20
        include_peripheral_summary: true
        include_both_passes: true

  vm_comparison_comprehensive:
    source: test_vm_comparison_comprehensive.c
    dependencies: []
    description: "Comprehensive ComponentVM comparison operations validation"
    timeout: 30s
    expected_patterns:
      - "ComponentVM Comparison Comprehensive Test"
      - "Equality comparisons: PASS"
      - "Less than comparisons: PASS"
      - "Greater than comparisons: PASS"
      - "Negative number comparisons: PASS"
      - "Zero comparisons: PASS"
      - "Comparisons in control flow: PASS"
      - "Comparisons with timing integration: PASS"
      - "VM Comparison Comprehensive Test: PASS"
    hardware_requirements: []
    category: vm_operations
    priority: high
    stability: phase_4_5_3b
    notes: "Validates all comparison operations: EQ, NE, LT, GT, LE, GE with control flow"
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: optional
        timeout_strategy: fail_graceful
      timeout: 45s
      
      semihosting_checks:
        - contains: "ComponentVM Comparison Comprehensive Test"
        - contains: "Equality comparisons: PASS"
        - contains: "Less than comparisons: PASS"
        - contains: "Greater than comparisons: PASS"
        - contains: "Negative number comparisons: PASS"
        - contains: "Zero comparisons: PASS"
        - contains: "Comparisons in control flow: PASS"
        - contains: "Comparisons with timing integration: PASS"
        - contains: "VM Comparison Comprehensive Test: PASS"
        - not_contains: "FAIL"
      semihosting_timeout: 30s
      
      diagnostics:
        verbosity: standard
        memory_dump_range: 0x20
        include_peripheral_summary: false
        include_both_passes: true

  vm_logical_comprehensive:
    source: test_vm_logical_comprehensive.c
    dependencies: []
    description: "Comprehensive ComponentVM logical operations validation"
    timeout: 30s
    expected_patterns:
      - "ComponentVM Logical Comprehensive Test"
      - "Logical AND operations: PASS"
      - "Logical OR operations: PASS"
      - "Logical NOT operations: PASS"
      - "Complex logical expressions: PASS"
      - "Logical operations with comparisons: PASS"
      - "Logical operations in control flow: PASS"
      - "Logical operations with timing integration: PASS"
      - "VM Logical Comprehensive Test: PASS"
    hardware_requirements: []
    category: vm_operations
    priority: high
    stability: phase_4_5_3b
    notes: "Validates all logical operations: AND, OR, NOT with control flow and timing"
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: optional
        timeout_strategy: fail_graceful
      timeout: 45s
      
      semihosting_checks:
        - contains: "ComponentVM Logical Comprehensive Test"
        - contains: "Logical AND operations: PASS"
        - contains: "Logical OR operations: PASS"
        - contains: "Logical NOT operations: PASS"
        - contains: "Complex logical expressions: PASS"
        - contains: "Logical operations with comparisons: PASS"
        - contains: "Logical operations in control flow: PASS"
        - contains: "Logical operations with timing integration: PASS"
        - contains: "VM Logical Comprehensive Test: PASS"
        - not_contains: "FAIL"
      semihosting_timeout: 30s
      
      diagnostics:
        verbosity: standard
        memory_dump_range: 0x20
        include_peripheral_summary: false
        include_both_passes: true

  vm_bitwise_comprehensive:
    source: test_vm_bitwise_comprehensive.c
    dependencies: []
    description: "Comprehensive ComponentVM bitwise operations validation"
    timeout: 30s
    expected_patterns:
      - "ComponentVM Bitwise Comprehensive Test"
      - "Bitwise AND operations: PASS"
      - "Bitwise OR operations: PASS"
      - "Bitwise XOR operations: PASS"
      - "Bitwise NOT operations: PASS"
      - "Left shift operations: PASS"
      - "Right shift operations: PASS"
      - "Complex bitwise expressions: PASS"
      - "Bitwise operations with timing integration: PASS"
      - "VM Bitwise Comprehensive Test: PASS"
    hardware_requirements: []
    category: vm_operations
    priority: high
    stability: phase_4_5_3b
    notes: "Validates all bitwise operations: BIT_AND, BIT_OR, BIT_XOR, BIT_NOT, shifts"
    validation:
      execution_strategy: dual_pass
      required: true
      authority:
        overall: authoritative
        semihosting: required
        memory: optional
        timeout_strategy: fail_graceful
      timeout: 45s
      
      semihosting_checks:
        - contains: "ComponentVM Bitwise Comprehensive Test"
        - contains: "Bitwise AND operations: PASS"
        - contains: "Bitwise OR operations: PASS"
        - contains: "Bitwise XOR operations: PASS"
        - contains: "Bitwise NOT operations: PASS"
        - contains: "Left shift operations: PASS"
        - contains: "Right shift operations: PASS"
        - contains: "Complex bitwise expressions: PASS"
        - contains: "Bitwise operations with timing integration: PASS"
        - contains: "VM Bitwise Comprehensive Test: PASS"
        - not_contains: "FAIL"
      semihosting_timeout: 30s
      
      diagnostics:
        verbosity: standard
        memory_dump_range: 0x20
        include_peripheral_summary: false
        include_both_passes: true

# Test suites for batch execution
test_suites:
  smoke_tests:
    description: "Quick validation tests for CI/CD"
    tests:
      - pc6_led_focused
    timeout: 30s
    
  hardware_validation:
    description: "Complete hardware validation suite"
    tests:
      - pc6_led_focused
      - led_basic
    timeout: 60s
    
  bootloader_foundation:
    description: "Bootloader Phase 4.5.1 blocking foundation tests"
    tests:
      - bootloader_blocking_foundation
    timeout: 60s
    
  bootloader_phase_4_5_2a:
    description: "Bootloader Phase 4.5.2A foundation tests"
    tests:
      - bootloader_foundation
    timeout: 30s
  
  bootloader_phase_4_5_2_complete:
    description: "Complete bootloader Phase 4.5.2 validation suite"
    tests:
      - bootloader_blocking_foundation
      - protobuf_integration
      - binary_framing
      - flash_programming_protocol
      - flash_programming_protocol_oracle
      - bootloader_golden_triangle
    timeout: 600s
  
  golden_triangle_integration:
    description: "Golden triangle integration tests"
    tests:
      - bootloader_golden_triangle
    timeout: 180s
    
  vm_comprehensive:
    description: "ComponentVM comprehensive operations validation suite"
    tests:
      - vm_arithmetic_comprehensive
      - vm_comparison_comprehensive
      - vm_logical_comprehensive
      - vm_bitwise_comprehensive
    timeout: 180s
    
  full_regression:
    description: "Complete regression test suite"
    tests:
      - pc6_led_focused
      - led_basic  
      - uart_basic
      - bootloader_foundation
      - vm_arithmetic_comprehensive
      - vm_comparison_comprehensive
      - vm_logical_comprehensive
      - vm_bitwise_comprehensive
    timeout: 300s