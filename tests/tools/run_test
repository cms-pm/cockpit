#!/bin/bash
# ComponentVM Hardware Test Runner
# Simple CLI entry point for workspace-isolated test execution

set -e

# Check if test name provided
if [ $# -eq 0 ]; then
    echo "Usage: $0 <test_name> [--debug|--verbose]"
    echo ""
    echo "Available tests:"
    echo "  Use 'list_tests' to see available tests"
    echo "  GT Lite tests: test_lite_stack, test_lite_arithmetic, test_lite_memory, etc."
    exit 1
fi

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
TEST_DIR="$(dirname "$SCRIPT_DIR")"

echo "ðŸš€ ComponentVM Hardware Test Runner"
echo "Test System: Workspace-Isolated Architecture"
echo "Working Directory: $TEST_DIR"
echo ""

# GT Lite test integration (Phase 4.11.6 implementation)
if [[ "$1" == test_lite_* ]]; then
    TEST_NAME=${1#test_lite_}  # Extract "stack" from "test_lite_stack"

    echo "GT Lite: Building $1..."
    cd "$TEST_DIR/test_registry/test_runner"

    # Build phase with error propagation
    if ! make $1 2>&1; then
        echo "GT Lite: Build FAILED for $1"
        exit 2  # Build failure
    fi

    echo "GT Lite: Executing $1..."

    # Execution phase with timeout (run_test level timeout)
    timeout 30 ./$1 $2  # Pass --verbose if provided
    RESULT=$?

    # Error code interpretation
    case $RESULT in
        0)   echo "GT Lite: All tests PASSED"; exit 0 ;;
        1)   echo "GT Lite: Some tests FAILED"; exit 1 ;;
        3)   echo "GT Lite: Runtime ERROR"; exit 3 ;;
        124) echo "GT Lite: Test TIMEOUT (30s exceeded)"; exit 3 ;;
        *)   echo "GT Lite: Unknown error ($RESULT)"; exit 3 ;;
    esac
fi

# Change to test directory
cd "$TEST_DIR"

# Activate virtual environment if it exists
if [ -d "test_venv" ]; then
    echo "Activating test virtual environment..."
    source test_venv/bin/activate
fi

# Run executor with proper Python environment
python3 workspace_manager/test_executor.py "$@"